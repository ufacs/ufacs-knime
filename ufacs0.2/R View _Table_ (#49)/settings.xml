<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="Image width" type="xint" value="800"/>
<entry key="Image height" type="xint" value="800"/>
<entry key="Image resolution" type="xstring" value="NA"/>
<entry key="Image background color" type="xstring" value="#ffffff"/>
<entry key="Text point size" type="xint" value="12"/>
<config key="R settings">
<entry key="script" type="xstring" value="library(ggplot2)%%00010library(grid)%%00010%%00010plot_data &lt;- data.frame(x = knime.in$&quot;Intensity_MeanIntensity_GFP&quot;, y = knime.in$&quot;Intensity_MeanIntensity_TRITC&quot;, group = knime.in$&quot;Metadata_Well&quot;)%%00010%%00010p &lt;- ggplot(plot_data, aes(x = Green, y = Red, colour = Well))%%00010# add points%%00010p &lt;- p + ggtitle(paste(&quot;Cell Intensity of &quot;, knime.flow.in[[&quot;Treatment_var&quot;]], &quot;\n&quot;))%%00010p &lt;- p + geom_point(aes(x = plot_data$x, y = plot_data$y, colour = plot_data$group), size = I(2), alpha = I(0.3)) + scale_colour_hue(l=60, c=150, guide = guide_legend(ncol = 2, title.hjust = 0.5, label.theme = element_text(size = 16, angle = 0)))%%00010# p &lt;- p + xlim(c(0, 1)) + ylim(c(0, 1))%%00010p &lt;- p + geom_vline(xintercept=knime.flow.in[[&quot;green_boundry&quot;]], linetype=&quot;dashed&quot;, size = 1, colour = &quot;#cccccc&quot;)%%00010p &lt;- p + geom_hline(yintercept=knime.flow.in[[&quot;red_boundry&quot;]], linetype=&quot;dashed&quot;, size = 1, colour = &quot;#cccccc&quot;)%%00010    # remove background and grid%%00010p &lt;- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())%%00010p &lt;- p + geom_vline(xintercept=0) + geom_hline(yintercept=0)%%00010p &lt;- p + scale_y_continuous(expand = c(0,0), limits=c(0, 1), name='Red\n')+ scale_x_continuous(expand = c(0,0), limits=c(0, 1), name='\nGreen')%%00010#p &lt;- p + theme(axis.line = element_line(colour = &quot;black&quot;, size = 1))%%00010%%00010# change font size%%00010p &lt;- p + theme(text = element_text(size=26, face = &quot;bold&quot;))%%00010# adjust margins %%00010p &lt;- p + theme(plot.margin = unit(c(3,0,3,0), &quot;cm&quot;))%%00010#ggsave(file=save_file, plot=p, width=10, height=6)%%00010save_file_png &lt;-paste(knime.flow.in[[&quot;PDF_plots_dir&quot;]], knime.flow.in[[&quot;Treatment_var&quot;]], &quot;.png&quot;, sep=&quot;&quot;)%%00010ggsave(file=save_file_png, plot=p, width=10, height=10)%%00010if(knime.flow.in[[&quot;Plot_PDF_var&quot;]] == 1){%%00010%%00009save_file_pdf &lt;-paste(knime.flow.in[[&quot;PDF_plots_dir&quot;]], knime.flow.in[[&quot;Treatment_var&quot;]], &quot;.pdf&quot;, sep=&quot;&quot;)%%00010%%00009ggsave(file=save_file_pdf, plot=p, width=10, height=10)%%00010}%%00010  print(p);"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
</config>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Scatter Plot"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="1047"/>
<entry key="y-coordinate" type="xint" value="339"/>
<entry key="width" type="xint" value="106"/>
<entry key="height" type="xint" value="15"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="9"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.r.RViewNodeFactory"/>
<entry key="node-name" type="xstring" value="R View (Table)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-bundle-version" type="xstring" value="3.2.0.v201607011540"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME GmbH, Konstanz, Germany"/>
<entry key="node-feature-version" type="xstring" value="3.2.0.v201607011540"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="R View (Table)"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.node.port.image.ImagePortObjectSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.port.image.ImagePortObject"/>
<entry key="port_object_summary" type="xstring" value="PNG Image 800 x 800 with 116 KB"/>
<entry key="port_spec_location" type="xstring" value="spec/spec.zip"/>
<entry key="port_object_location" type="xstring" value="object/portobject.zip"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
